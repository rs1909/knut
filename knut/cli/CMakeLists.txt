INCLUDE_DIRECTORIES( ${KNUT_SOURCE_DIR}/src
  ${KNUT_BINARY_DIR}/src
  ${KNUT_SOURCE_DIR}/laarpack
  ${KNUT_MXML_INC}
  ${UMF_INCLUDE} 
  ${AMD_INCLUDE})


ADD_EXECUTABLE( ${CLI_NAME} main.cpp )
ADD_EXECUTABLE( ${VFKNUT_NAME} vfknut.cpp )
ADD_EXECUTABLE( mat2julia mat2julia.cpp )

SET(INTERNAL_LIBS knutlib laarpack ${UMFPACK} ${AMD} ${VFGEN_LIBS} ${KNUT_MXML_LIB})
SET(EXTERNAL_LIBS ${BLAS_LIBS} ${CMAKE_DL_LIBS} ${KNUT_FORTRAN_RUNTIME})

IF(APPLE)
  TARGET_LINK_LIBRARIES( ${CLI_NAME} PRIVATE ${INTERNAL_LIBS} ${EXTERNAL_LIBS} ${COREFOUNDATION_LIBRARY})
  TARGET_LINK_LIBRARIES( ${VFKNUT_NAME} PRIVATE ${INTERNAL_LIBS} ${EXTERNAL_LIBS} ${COREFOUNDATION_LIBRARY})
  TARGET_LINK_LIBRARIES( mat2julia PRIVATE ${INTERNAL_LIBS} ${EXTERNAL_LIBS} ${COREFOUNDATION_LIBRARY})
ELSE(APPLE)
  TARGET_LINK_LIBRARIES( ${CLI_NAME} PRIVATE ${INTERNAL_LIBS} ${EXTERNAL_LIBS})
  TARGET_LINK_LIBRARIES( ${VFKNUT_NAME} PRIVATE ${INTERNAL_LIBS} ${EXTERNAL_LIBS})
  TARGET_LINK_LIBRARIES( mat2julia PRIVATE ${INTERNAL_LIBS} ${EXTERNAL_LIBS})
ENDIF(APPLE)

IF( WIN32 )
IF( NOT MSVC )
IF( KNUT_RELEASE )
  SET_TARGET_PROPERTIES( ${CLI_NAME} PROPERTIES LINK_FLAGS "-Wl,-s" )
ENDIF( KNUT_RELEASE )
ENDIF( NOT MSVC )
ENDIF( WIN32 )

INSTALL( TARGETS ${CLI_NAME} ${VFKNUT_NAME} mat2julia DESTINATION ${KNUT_BIN_DIR} )
INSTALL( FILES ${KNUT_SOURCE_DIR}/src/knutsys.h
	${KNUT_SOURCE_DIR}/src/pddesys.h
	${KNUT_SOURCE_DIR}/src/matrix.h
	${KNUT_SOURCE_DIR}/src/knerror.h
	DESTINATION ${KNUT_INCLUDE_DIR})
